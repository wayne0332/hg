/**
 * This class is generated by jOOQ
 */
package cn.hg.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.4.2" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PictureRecord extends org.jooq.impl.UpdatableRecordImpl<cn.hg.jooq.tables.records.PictureRecord> implements org.jooq.Record6<java.lang.Integer, java.lang.String, java.lang.String, java.lang.Byte, java.lang.Integer, java.sql.Timestamp> {

	private static final long serialVersionUID = -987982776;

	/**
	 * Setter for <code>hg.picture.id</code>.
	 */
	public void setId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>hg.picture.id</code>.
	 */
	public java.lang.Integer getId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>hg.picture.name</code>.
	 */
	public void setName(java.lang.String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>hg.picture.name</code>.
	 */
	public java.lang.String getName() {
		return (java.lang.String) getValue(1);
	}

	/**
	 * Setter for <code>hg.picture.path</code>.
	 */
	public void setPath(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>hg.picture.path</code>.
	 */
	public java.lang.String getPath() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>hg.picture.type</code>.
	 */
	public void setType(java.lang.Byte value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>hg.picture.type</code>.
	 */
	public java.lang.Byte getType() {
		return (java.lang.Byte) getValue(3);
	}

	/**
	 * Setter for <code>hg.picture.description_id</code>.
	 */
	public void setDescriptionId(java.lang.Integer value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>hg.picture.description_id</code>.
	 */
	public java.lang.Integer getDescriptionId() {
		return (java.lang.Integer) getValue(4);
	}

	/**
	 * Setter for <code>hg.picture.time_stamp</code>.
	 */
	public void setTimeStamp(java.sql.Timestamp value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>hg.picture.time_stamp</code>.
	 */
	public java.sql.Timestamp getTimeStamp() {
		return (java.sql.Timestamp) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row6<java.lang.Integer, java.lang.String, java.lang.String, java.lang.Byte, java.lang.Integer, java.sql.Timestamp> fieldsRow() {
		return (org.jooq.Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row6<java.lang.Integer, java.lang.String, java.lang.String, java.lang.Byte, java.lang.Integer, java.sql.Timestamp> valuesRow() {
		return (org.jooq.Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return cn.hg.jooq.tables.Picture.PICTURE.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field2() {
		return cn.hg.jooq.tables.Picture.PICTURE.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return cn.hg.jooq.tables.Picture.PICTURE.PATH;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field4() {
		return cn.hg.jooq.tables.Picture.PICTURE.TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field5() {
		return cn.hg.jooq.tables.Picture.PICTURE.DESCRIPTION_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field6() {
		return cn.hg.jooq.tables.Picture.PICTURE.TIME_STAMP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getPath();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value4() {
		return getType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value5() {
		return getDescriptionId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value6() {
		return getTimeStamp();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PictureRecord value1(java.lang.Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PictureRecord value2(java.lang.String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PictureRecord value3(java.lang.String value) {
		setPath(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PictureRecord value4(java.lang.Byte value) {
		setType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PictureRecord value5(java.lang.Integer value) {
		setDescriptionId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PictureRecord value6(java.sql.Timestamp value) {
		setTimeStamp(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PictureRecord values(java.lang.Integer value1, java.lang.String value2, java.lang.String value3, java.lang.Byte value4, java.lang.Integer value5, java.sql.Timestamp value6) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PictureRecord
	 */
	public PictureRecord() {
		super(cn.hg.jooq.tables.Picture.PICTURE);
	}

	/**
	 * Create a detached, initialised PictureRecord
	 */
	public PictureRecord(java.lang.Integer id, java.lang.String name, java.lang.String path, java.lang.Byte type, java.lang.Integer descriptionId, java.sql.Timestamp timeStamp) {
		super(cn.hg.jooq.tables.Picture.PICTURE);

		setValue(0, id);
		setValue(1, name);
		setValue(2, path);
		setValue(3, type);
		setValue(4, descriptionId);
		setValue(5, timeStamp);
	}
}
